From f18750b4acb237cdf4889be8e2c916d70e03f279 Mon Sep 17 00:00:00 2001
From: John Johansen <john@jjmx.net>
Date: Thu, 27 Apr 2023 17:14:29 +0000
Subject: [PATCH] Merge Issue 312: added missing kernel mount options

This patch adds the following mount options: 'nostrictatime',
'lazytime', and 'nolazytime'.

The MS_STRICTATIME mount flag already existed, and 'nostrictatime' was
listed along with 'strictatime' in the comments of parser/mount.cc, so
this patch adds a mapping for 'nostrictatime' to clear MS_STRICTATIME.

Additionally, the Linux kernel includes the 'lazytime' option with
MS_LAZYTIME mapping to (1<<25), so this patch adds MS_LAZYTIME to
parser/mount.h and the corresponding mappings in parser/mount.cc for
'lazytime' and 'nolazytime'.

MR: https://gitlab.com/apparmor/apparmor/-/merge_requests/1005
Approved-by: John Johansen <john@jjmx.net>
Merged-by: John Johansen <john@jjmx.net>
(cherry picked from commit c37be61d17481a56ac1d4ab46d0606c2212ae641)
Signed-off-by: Jon Tourville <jon.tourville@canonical.com>
---
 parser/apparmor.d.pod                       |  2 +-
 parser/mount.cc                             | 16 +++++++++++++---
 parser/mount.h                              |  7 ++++++-
 parser/tst/simple_tests/mount/bad_opt_29.sd |  7 +++++++
 parser/tst/simple_tests/mount/bad_opt_30.sd |  7 +++++++
 parser/tst/simple_tests/mount/bad_opt_31.sd |  7 +++++++
 parser/tst/simple_tests/mount/ok_opt_56.sd  |  8 ++++++++
 parser/tst/simple_tests/mount/ok_opt_57.sd  |  8 ++++++++
 parser/tst/simple_tests/mount/ok_opt_58.sd  |  8 ++++++++
 parser/tst/simple_tests/mount/ok_opt_59.sd  |  7 +++++++
 parser/tst/simple_tests/mount/ok_opt_60.sd  |  7 +++++++
 parser/tst/simple_tests/mount/ok_opt_61.sd  |  7 +++++++
 parser/tst/simple_tests/mount/ok_opt_62.sd  |  7 +++++++
 parser/tst/simple_tests/mount/ok_opt_63.sd  |  7 +++++++
 parser/tst/simple_tests/mount/ok_opt_64.sd  |  7 +++++++
 parser/tst/simple_tests/mount/ok_opt_65.sd  |  8 ++++++++
 parser/tst/simple_tests/mount/ok_opt_66.sd  |  7 +++++++
 parser/tst/simple_tests/mount/ok_opt_67.sd  |  7 +++++++
 tests/regression/apparmor/mount.sh          |  6 ++++++
 utils/test/test-parser-simple-tests.py      |  3 +++
 20 files changed, 138 insertions(+), 5 deletions(-)
 create mode 100644 parser/tst/simple_tests/mount/bad_opt_29.sd
 create mode 100644 parser/tst/simple_tests/mount/bad_opt_30.sd
 create mode 100644 parser/tst/simple_tests/mount/bad_opt_31.sd
 create mode 100644 parser/tst/simple_tests/mount/ok_opt_56.sd
 create mode 100644 parser/tst/simple_tests/mount/ok_opt_57.sd
 create mode 100644 parser/tst/simple_tests/mount/ok_opt_58.sd
 create mode 100644 parser/tst/simple_tests/mount/ok_opt_59.sd
 create mode 100644 parser/tst/simple_tests/mount/ok_opt_60.sd
 create mode 100644 parser/tst/simple_tests/mount/ok_opt_61.sd
 create mode 100644 parser/tst/simple_tests/mount/ok_opt_62.sd
 create mode 100644 parser/tst/simple_tests/mount/ok_opt_63.sd
 create mode 100644 parser/tst/simple_tests/mount/ok_opt_64.sd
 create mode 100644 parser/tst/simple_tests/mount/ok_opt_65.sd
 create mode 100644 parser/tst/simple_tests/mount/ok_opt_66.sd
 create mode 100644 parser/tst/simple_tests/mount/ok_opt_67.sd

--- apparmor-3.0.4.orig/parser/apparmor.d.pod
+++ apparmor-3.0.4/parser/apparmor.d.pod
@@ -172,7 +172,7 @@ B<MOUNT FLAGS EXPRESSION> = ( I<MOUNT FL
 
 B<MOUNT FLAGS LIST> = Comma separated list of I<MOUNT FLAGS>.
 
-B<MOUNT FLAGS> = ( 'ro' | 'rw' | 'nosuid' | 'suid' | 'nodev' | 'dev' | 'noexec' | 'exec' | 'sync' | 'async' | 'remount' | 'mand' | 'nomand' | 'dirsync' | 'noatime' | 'atime' | 'nodiratime' | 'diratime' | 'bind' | 'rbind' | 'move' | 'verbose' | 'silent' | 'loud' | 'acl' | 'noacl' | 'unbindable' | 'runbindable' | 'private' | 'rprivate' | 'slave' | 'rslave' | 'shared' | 'rshared' | 'relatime' | 'norelatime' | 'iversion' | 'noiversion' | 'strictatime' | 'nouser' | 'user' )
+B<MOUNT FLAGS> = ( 'ro' | 'rw' | 'nosuid' | 'suid' | 'nodev' | 'dev' | 'noexec' | 'exec' | 'sync' | 'async' | 'remount' | 'mand' | 'nomand' | 'dirsync' | 'noatime' | 'atime' | 'nodiratime' | 'diratime' | 'bind' | 'rbind' | 'move' | 'verbose' | 'silent' | 'loud' | 'acl' | 'noacl' | 'unbindable' | 'runbindable' | 'private' | 'rprivate' | 'slave' | 'rslave' | 'shared' | 'rshared' | 'relatime' | 'norelatime' | 'iversion' | 'noiversion' | 'strictatime' | 'nostrictatime' | 'lazytime' | 'nolazytime' | 'nouser' | 'user' | 'symfollow' | 'nosymfollow' )
 
 B<MOUNT EXPRESSION> = ( I<ALPHANUMERIC> | I<AARE> ) ...
 
--- apparmor-3.0.4.orig/parser/mount.cc
+++ apparmor-3.0.4/parser/mount.cc
@@ -98,6 +98,9 @@
  *	nomand
  * #define MS_DIRSYNC	128		Directory modifications are synchronous
  *	dirsync
+ * #define MS_NOSYMFOLLOW	256 	Do not follow symlinks
+ *	symfollow
+ *	nosymfollow
  * #define MS_NOATIME	1024		Do not update access times
  *	noatime
  *	atime
@@ -139,6 +142,9 @@
  * #define MS_STRICTATIME	(1<<24)	Always perform atime updates
  *	strictatime
  *	nostrictatime
+ * #define MS_LAZYTIME (1<<25)	Update the on-disk [acm]times lazily
+ *	lazytime
+ *	nolazytime
  * #define MS_NOSEC	(1<<28)
  * #define MS_BORN		(1<<29)
  * #define MS_ACTIVE	(1<<30)
@@ -246,6 +252,8 @@ static struct mnt_keyword_table mnt_opts
 	{"mand",		MS_MAND, 0},
 	{"nomand",		0, MS_MAND},
 	{"dirsync",		MS_DIRSYNC, 0},
+	{"symfollow",		0, MS_NOSYMFOLLOW},
+	{"nosymfollow",		MS_NOSYMFOLLOW, 0},
 	{"atime",		0, MS_NOATIME},
 	{"noatime",		MS_NOATIME, 0},
 	{"diratime",		0, MS_NODIRATIME},
@@ -283,6 +291,9 @@ static struct mnt_keyword_table mnt_opts
 	{"iversion",		MS_IVERSION, 0},
 	{"noiversion",		0, MS_IVERSION},
 	{"strictatime",		MS_STRICTATIME, 0},
+	{"nostrictatime",	0, MS_STRICTATIME},
+	{"lazytime",		MS_LAZYTIME, 0},
+	{"nolazytime",		0, MS_LAZYTIME},
 	{"user",		0, (unsigned int) MS_NOUSER},
 	{"nouser",		(unsigned int) MS_NOUSER, 0},
 
@@ -372,9 +383,8 @@ static bool conflicting_flags(unsigned i
 		for (int i = 0; i < 31; i++) {
 			unsigned int mask = 1 << i;
 			if ((flags & inv) & mask) {
-				cerr << "conflicting flag value = ";
-				cerr << make_pair(flags, inv);
-				cerr << "\n";
+				cerr << "conflicting flag values = "
+				     << flags << ", " << inv << "\n";
 			}
 		}
 		return true;
--- apparmor-3.0.4.orig/parser/mount.h
+++ apparmor-3.0.4/parser/mount.h
@@ -40,6 +40,8 @@
 #define MS_MAND		(1 << 6)
 #define MS_NOMAND	0
 #define MS_DIRSYNC	(1 << 7)
+#define MS_SYMFOLLOW	0
+#define MS_NOSYMFOLLOW	(1 << 8)
 #define MS_NODIRSYNC	0
 #define MS_NOATIME	(1 << 10)
 #define MS_ATIME	0
@@ -62,6 +64,7 @@
 #define MS_IVERSION	(1 << 23)
 #define MS_NOIVERSION	0
 #define MS_STRICTATIME	(1 << 24)
+#define MS_LAZYTIME	(1 << 25)
 #define MS_NOUSER	(1 << 31)
 #define MS_USER		0
 
@@ -75,12 +78,14 @@
 
 #define MS_ALL_FLAGS	(MS_RDONLY | MS_NOSUID | MS_NODEV | MS_NOEXEC | \
 			 MS_SYNC | MS_REMOUNT | MS_MAND | MS_DIRSYNC | \
+			 MS_NOSYMFOLLOW | \
 			 MS_NOATIME | MS_NODIRATIME | MS_BIND | MS_RBIND | \
 			 MS_MOVE | MS_VERBOSE | MS_ACL | \
 			 MS_UNBINDABLE | MS_RUNBINDABLE | \
 			 MS_PRIVATE | MS_RPRIVATE | \
 			 MS_SLAVE | MS_RSLAVE | MS_SHARED | MS_RSHARED | \
-			 MS_RELATIME | MS_IVERSION | MS_STRICTATIME | MS_USER)
+			 MS_RELATIME | MS_IVERSION | MS_STRICTATIME | \
+			 MS_LAZYTIME | MS_USER)
 
 /* set of flags we don't use but define (but not with the kernel values)
  *  for MNT_FLAGS
--- /dev/null
+++ apparmor-3.0.4/parser/tst/simple_tests/mount/bad_opt_29.sd
@@ -0,0 +1,7 @@
+#
+#=Description basic mount rule conflicting = options
+#=EXRESULT FAIL
+#
+/usr/bin/foo {
+  mount options=(strictatime, nostrictatime) -> /foo,
+}
--- /dev/null
+++ apparmor-3.0.4/parser/tst/simple_tests/mount/bad_opt_30.sd
@@ -0,0 +1,7 @@
+#
+#=Description basic mount rule conflicting = options
+#=EXRESULT FAIL
+#
+/usr/bin/foo {
+  mount options=(lazytime, nolazytime) -> /foo,
+}
--- /dev/null
+++ apparmor-3.0.4/parser/tst/simple_tests/mount/bad_opt_31.sd
@@ -0,0 +1,7 @@
+#
+#=Description basic mount rule conflicting = options
+#=EXRESULT FAIL
+#
+/usr/bin/foo {
+  mount options=(symfollow, nosymfollow) -> /foo,
+}
--- /dev/null
+++ apparmor-3.0.4/parser/tst/simple_tests/mount/ok_opt_56.sd
@@ -0,0 +1,8 @@
+#
+#=Description basic rules to test the "nostrictatime" mount option
+#=EXRESULT PASS
+/usr/bin/foo {
+  mount options=nostrictatime /a -> /1,
+  mount options=(nostrictatime) /b -> /2,
+  mount options in (nostrictatime) /d -> /4,
+}
--- /dev/null
+++ apparmor-3.0.4/parser/tst/simple_tests/mount/ok_opt_57.sd
@@ -0,0 +1,8 @@
+#
+#=Description basic rules to test the "lazytime" mount option
+#=EXRESULT PASS
+/usr/bin/foo {
+  mount options=lazytime /a -> /1,
+  mount options=(lazytime) /b -> /2,
+  mount options in (lazytime) /d -> /4,
+}
--- /dev/null
+++ apparmor-3.0.4/parser/tst/simple_tests/mount/ok_opt_58.sd
@@ -0,0 +1,8 @@
+#
+#=Description basic rules to test the "nolazytime" mount option
+#=EXRESULT PASS
+/usr/bin/foo {
+  mount options=nolazytime /a -> /1,
+  mount options=(nolazytime) /b -> /2,
+  mount options in (nolazytime) /d -> /4,
+}
--- /dev/null
+++ apparmor-3.0.4/parser/tst/simple_tests/mount/ok_opt_59.sd
@@ -0,0 +1,7 @@
+#
+#=Description basic rules to test the "strictatime" mount option in combination
+#=EXRESULT PASS
+/usr/bin/foo {
+  mount options=(rw,strictatime) /c -> /3,
+  mount options in (ro,strictatime) /e -> /5,
+}
--- /dev/null
+++ apparmor-3.0.4/parser/tst/simple_tests/mount/ok_opt_60.sd
@@ -0,0 +1,7 @@
+#
+#=Description basic rules to test the "nostrictatime" mount option in combination
+#=EXRESULT PASS
+/usr/bin/foo {
+  mount options=(rw,nostrictatime) /c -> /3,
+  mount options in (ro,nostrictatime) /e -> /5,
+}
--- /dev/null
+++ apparmor-3.0.4/parser/tst/simple_tests/mount/ok_opt_61.sd
@@ -0,0 +1,7 @@
+#
+#=Description basic rules to test the "lazytime" mount option in combination
+#=EXRESULT PASS
+/usr/bin/foo {
+  mount options=(rw,lazytime) /c -> /3,
+  mount options in (ro,lazytime) /e -> /5,
+}
--- /dev/null
+++ apparmor-3.0.4/parser/tst/simple_tests/mount/ok_opt_62.sd
@@ -0,0 +1,7 @@
+#
+#=Description basic rules to test the "nolazytime" mount option in combination
+#=EXRESULT PASS
+/usr/bin/foo {
+  mount options=(rw,nolazytime) /c -> /3,
+  mount options in (ro,nolazytime) /e -> /5,
+}
--- /dev/null
+++ apparmor-3.0.4/parser/tst/simple_tests/mount/ok_opt_63.sd
@@ -0,0 +1,7 @@
+#
+#=Description basic mount rule conflicting options with in
+#=EXRESULT PASS
+#
+/usr/bin/foo {
+  mount options in (strictatime, nostrictatime) -> /foo,
+}
--- /dev/null
+++ apparmor-3.0.4/parser/tst/simple_tests/mount/ok_opt_64.sd
@@ -0,0 +1,7 @@
+#
+#=Description basic mount rule conflicting options with in
+#=EXRESULT PASS
+#
+/usr/bin/foo {
+  mount options in (lazytime, nolazytime) -> /foo,
+}
--- /dev/null
+++ apparmor-3.0.4/parser/tst/simple_tests/mount/ok_opt_65.sd
@@ -0,0 +1,8 @@
+#
+#=Description basic rules to test the "nosymfollow" mount option
+#=EXRESULT PASS
+/usr/bin/foo {
+  mount options=nosymfollow /a -> /1,
+  mount options=(nosymfollow) /b -> /2,
+  mount options in (nosymfollow) /d -> /4,
+}
--- /dev/null
+++ apparmor-3.0.4/parser/tst/simple_tests/mount/ok_opt_66.sd
@@ -0,0 +1,7 @@
+#
+#=Description basic rules to test the "symfollow" mount option in combination
+#=EXRESULT PASS
+/usr/bin/foo {
+  mount options=(rw,symfollow) /c -> /3,
+  mount options in (ro,symfollow) /e -> /5,
+}
--- /dev/null
+++ apparmor-3.0.4/parser/tst/simple_tests/mount/ok_opt_67.sd
@@ -0,0 +1,7 @@
+#
+#=Description basic mount rule conflicting options with in
+#=EXRESULT PASS
+#
+/usr/bin/foo {
+  mount options in (symfollow, nosymfollow) -> /foo,
+}
--- apparmor-3.0.4.orig/tests/regression/apparmor/mount.sh
+++ apparmor-3.0.4/tests/regression/apparmor/mount.sh
@@ -161,6 +161,8 @@ run_all_combinations_test() {
 			genprofile cap:sys_admin "mount:ALL" "qual=deny:mount:options=($combination)"
 			runchecktest "MOUNT (confined cap mount combination deny test $combination)" fail mount ${loop_device} ${mount_point} -o $combination
 			remove_mnt
+		else
+			echo "    not supported by parser - skipping mount option=($combination),"
 		fi
 
 		genprofile cap:sys_admin "mount:options=(rw)"
@@ -171,6 +173,7 @@ run_all_combinations_test() {
 
 test_nonfs_options() {
 	if [ "$(parser_supports "mount options=($1),")" != "true" ] ; then
+	        echo "    not supported by parser - skipping mount options=($1),"
 		return
 	fi
 
@@ -189,6 +192,7 @@ test_nonfs_options() {
 
 test_dir_options() {
 	if [ "$(parser_supports "mount options=($1),")" != "true" ] ; then
+		echo "    not supported by parser - skipping mount option=($1),"
 		return
 	fi
 
@@ -206,6 +210,7 @@ test_dir_options() {
 
 test_propagation_options() {
 	if [ "$(parser_supports "mount options=($1),")" != "true" ] ; then
+		echo "    not supported by parser - skipping mount option=($1),"
 		return
 	fi
 
@@ -322,6 +327,7 @@ remove_mnt
 
 
 if [ "$(kernel_features mount)" != "true" -o "$(parser_supports 'mount,')" != "true" ] ; then
+	echo "    mount rules not supported, using capability check ..."
 	genprofile capability:sys_admin
 	runchecktest "MOUNT (confined cap)" pass mount ${loop_device} ${mount_point}
 	remove_mnt
--- apparmor-3.0.4.orig/utils/test/test-parser-simple-tests.py
+++ apparmor-3.0.4/utils/test/test-parser-simple-tests.py
@@ -108,6 +108,9 @@ exception_not_raised = [
     'mount/bad_opt_26.sd',
     'mount/bad_opt_27.sd',
     'mount/bad_opt_28.sd',
+    'mount/bad_opt_29.sd',
+    'mount/bad_opt_30.sd',
+    'mount/bad_opt_31.sd',
     'profile/flags/flags_bad10.sd',
     'profile/flags/flags_bad11.sd',
     'profile/flags/flags_bad12.sd',
